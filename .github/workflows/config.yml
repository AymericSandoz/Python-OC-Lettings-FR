name: CI/CD Pipeline

on:
  push:
    branches:
      - master # Pour déclencher les workflows de conteneurisation et déploiement
    # pull_request:
    #   branches:
    #     - "*" # Pour déclencher les tests uniquement sur les PR
    pull_request:
      branches: ["master"]

jobs:
  # Job de tests et linting
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run linting
        run: |
          flake8 . --count --show-source --statistics

      - name: Run tests with coverage
        run: |
          pytest --cov
      - name: Verify coverage
        run: |
          coverage report --fail-under=80

  # Job de conteneurisation
  build_and_push:
    runs-on: ubuntu-latest
    needs: test # Ne s’exécute que si le job de test réussit
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and tag Docker image
        run: |
          docker build -t oc-lettings-app-test:${{ github.sha }} .
          docker tag oc-lettings-app-test:${{ github.sha }} ${{ secrets.DOCKERHUB_USERNAME }}/oc-lettings-app-test:${{ github.sha }}

      - name: Push Docker image
        run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/oc-lettings-app-test:${{ github.sha }}

  # Job de déploiement sur Render
  deploy:
    runs-on: ubuntu-latest
    needs: build_and_push # Ne s’exécute que si le job de conteneurisation réussit
    steps:
      - uses: actions/checkout@v3
      - uses: JorgeLNJunior/render-deploy@v1.4.4
        with:
          service_id: ${{ secrets.RENDER_SERVICE_ID }}
          api_key: ${{ secrets.RENDER_API_KEY }}
